"Filed out from Dolphin Smalltalk 7"!

JadeiteAbstractTestCase subclass: #JadeiteChangesBrowserTestCase
	instanceVariableNames: 'changesBrowser'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteChangesBrowserTestCase guid: (GUID fromString: '{e716d8ac-bd87-4da8-b84e-c8936c4a6450}')!
JadeiteChangesBrowserTestCase comment: ''!
!JadeiteChangesBrowserTestCase categoriesForClass!Unclassified! !
!JadeiteChangesBrowserTestCase methodsFor!

addNewClass
	self
		saveClass: 'NewTestClass'
		withInstVars: #('abc')
		package: 'RowanSample1-Core'!

addNewMethod
	| source |
	source := 'newMethod
	"RowanSample1 new newMethod"
	^123 + 456'.
	self
		saveMethod: source
		in: 'RowanSample1Test'
		category: 'addition'!

makeLotsOfChanges
	self
		saveMethod: 'aaa  ^123'
		in: 'RowanSample1Test'
		category: 'deleteMe'.
	self
		saveMethod: 'zzz  ^123'
		in: 'RowanSample1Test'
		category: 'deleteMe'.
	self
		saveMethod: 'mmm  ^123'
		in: 'RowanSample1Test'
		category: 'deleteMe'.
	self
		saveMethod: 'test1 ^$f'
		in: 'RowanSample1Test'
		category: 'deleteMe'.
	self
		saveMethod: 'test2 ^$f'
		in: 'RowanSample1Test'
		category: 'deleteMe'.
	self selectMethodNamed: #testFailure.
	self projectsPresenter removeMethods: (Array with: self projectsPresenter selectedClass).
	self
		saveMethod: 'notAnotherMethod  ^123'
		in: 'RowanSample1'
		category: 'ulp'.
	self
		saveMethod: 'yesIndeed  ^123'
		in: 'RowanSample1'
		category: 'ulp'!

setUp
	super setUp.
	projectsBrowser
		ifNil: [projectsBrowser := self openWindow: [JadeiteBrowser showOnSession: session]]!

tearDown
	super tearDown.
	changesBrowser ifNotNil: [self destroy: changesBrowser].
	projectsBrowser ifNotNil: [self destroy: projectsBrowser]!

test_additionalAccelerators
	"No way yet to adequately test accelerators function
	but we can assert that we tell Dolphin to set them up"

	self testsIssue: #issue329 withTitle: 'Need accelerator key tests'.
	self selectServiceNamed: 'RowanSample1' in: self projectListPresenter.
	changesBrowser := self projectListPresenter selection changesUsing: session.
	self assert: changesBrowser additionalAccelerators first first equals: #raiseConsole.
	self assert: changesBrowser additionalAccelerators first last equals: 'Ctrl+F7'.
	self assert: changesBrowser additionalAccelerators size equals: 1	"should fail if we add a new one"!

test_browseImplementors
	| methodListBrowser |
	self testsIssue: #issue407
		withTitle: '(3.0.56) would like option to browse class OR method from changes window'.
	self selectRowanSample1Class.
	self
		saveMethod: 'fnoodle  ^123'
		in: 'RowanSample1'
		category: 'deleteMe'.
	self selectServiceNamed: 'RowanSample1' in: self projectListPresenter.
	changesBrowser := self projectListPresenter selection changesUsing: session.
	self assert: changesBrowser operationListPresenter list first isKindOf: MCAddition.
	changesBrowser operationListPresenter selection: changesBrowser operationListPresenter list first.
	self assert: changesBrowser operationListPresenter selection className equals: 'RowanSample1'.
	self assert: changesBrowser operationListPresenter selection selector equals: 'fnoodle'.
	methodListBrowser := changesBrowser browseImplementors.
	
	[self assert: methodListBrowser primaryPresenter methodListPresenter selection selector
		equals: #fnoodle]
			ensure: 
				[self destroy: methodListBrowser.
				self destroy: projectsBrowser]!

test_browseImplementorsOfRevertedChange
	| methodListBrowser |
	self testsIssue: #issue686
		withTitle: 'Changes Browser Browse senders/implementors doesn''t work after reverting changes (3.0.92)'.
	self selectRowanSample1Test.
	self
		saveMethod: 'test2  ^123'
		in: 'RowanSample1Test'
		category: 'deleteMe'.
	self selectServiceNamed: 'RowanSample1' in: self projectListPresenter.
	changesBrowser := self projectListPresenter selection changesUsing: session.
	self assert: changesBrowser operationListPresenter list first isKindOf: MCModification.
	changesBrowser operationListPresenter selection: changesBrowser operationListPresenter list first.
	self assert: changesBrowser operationListPresenter selection className equals: 'RowanSample1Test'.
	self assert: changesBrowser operationListPresenter selection selector equals: 'test2'.
	changesBrowser revert.
	self assert: changesBrowser operationListPresenter selection selector equals: 'test2 (reverted)'.
	methodListBrowser := changesBrowser browseImplementors.
	
	[self assert: methodListBrowser primaryPresenter methodListPresenter selection selector
		equals: #test2]
			ensure: 
				[self destroy: methodListBrowser.
				self destroy: projectsBrowser]!

test_browseImplementorsSelectsChangedMethod
	| methodListBrowser |
	self testsIssue: #issue407
		withTitle: '(3.0.56) would like option to browse class OR method from changes window'.
	self selectRowanSample1Class.
	self
		saveMethod: 'size  ^super size'
		in: 'RowanSample1'
		category: 'deleteMe'.
	self selectServiceNamed: 'RowanSample1' in: self projectListPresenter.
	changesBrowser := self projectListPresenter selection changesUsing: session.
	changesBrowser operationListPresenter selectionByIndex: 1.
	methodListBrowser := changesBrowser browseImplementors.
	
	[self assert: methodListBrowser primaryPresenter methodListPresenter selection selector equals: #size.
	self assert: methodListBrowser primaryPresenter methodListPresenter selection className
		equals: 'RowanSample1']
			ensure: 
				[self destroy: methodListBrowser.
				self destroy: projectsBrowser]!

test_browseMethodSelectsAddedClass
	| projectService secondProjectBrowser |
	self testsIssue: #issue415 withTitle: 'Browse changes on a class definition change handled poorly'.
	self selectRowanSample1Class.
	self addNewClass.
	projectService := transcript projectListPresenter projectListPresenter list
				detect: [:service | service name = 'RowanSample1'].
	transcript projectListPresenter projectListPresenter selection: projectService.
	changesBrowser := projectService changesUsing: session.
	self assert: changesBrowser operationListPresenter list first isKindOf: MCAddition.
	changesBrowser operationListPresenter selection: changesBrowser operationListPresenter list first.
	self assert: changesBrowser operationListPresenter selection className equals: 'NewTestClass'.
	secondProjectBrowser := changesBrowser browseChangedThing.
	
	[self assert: secondProjectBrowser currentCard classListPresenter selection name
		equals: 'NewTestClass']
			ensure: 
				[secondProjectBrowser currentCard basicRemoveMethods.
				self destroy: secondProjectBrowser.
				self destroy: projectsBrowser]!

test_browseMethodSelectsAddedMethod
	| projectService secondProjectBrowser |
	self testsIssue: #issue415 withTitle: 'Browse changes on a class definition change handled poorly'.
	self addNewMethod.
	projectService := transcript projectListPresenter projectListPresenter list
				detect: [:service | service name = 'RowanSample1'].
	transcript projectListPresenter projectListPresenter selection: projectService.
	changesBrowser := projectService changesUsing: session.
	self assert: changesBrowser operationListPresenter list first isKindOf: MCAddition.
	changesBrowser operationListPresenter selection: changesBrowser operationListPresenter list first.
	secondProjectBrowser := changesBrowser browseChangedThing.
	
	[self assert: secondProjectBrowser currentCard methodListPresenter selection selector
		equals: #newMethod.
	self assert: secondProjectBrowser currentCard classListPresenter selection name
		equals: 'RowanSample1Test']
			ensure: 
				[secondProjectBrowser currentCard basicRemoveMethods.
				self destroy: secondProjectBrowser]!

test_browseOfRevertedChange
	| secondProjectBrowser |
	self testsIssue: #issue686
		withTitle: 'Changes Browser Browse senders/implementors doesn''t work after reverting changes (3.0.92)'.
	self selectRowanSample1Test.
	self
		saveMethod: 'test2  ^123'
		in: 'RowanSample1Test'
		category: 'deleteMe'.
	self selectServiceNamed: 'RowanSample1' in: self projectListPresenter.
	changesBrowser := self projectListPresenter selection changesUsing: session.
	self assert: changesBrowser operationListPresenter list first isKindOf: MCModification.
	changesBrowser operationListPresenter selection: changesBrowser operationListPresenter list first.
	self assert: changesBrowser operationListPresenter selection className equals: 'RowanSample1Test'.
	self assert: changesBrowser operationListPresenter selection selector equals: 'test2'.
	changesBrowser revert.
	self assert: changesBrowser operationListPresenter selection selector equals: 'test2 (reverted)'.
	secondProjectBrowser := changesBrowser browseChangedThing.
	[self assert: secondProjectBrowser currentCard methodListPresenter selection selector equals: #test2] ensure: 
			[self destroy: secondProjectBrowser.
			self destroy: projectsBrowser]!

test_browseSenders
	| methodListBrowser |
	self testsIssue: #issue407
		withTitle: '(3.0.56) would like option to browse class OR method from changes window'.
	self selectRowanSample1Class.
	self
		saveMethod: 'fnoodle  ^123'
		in: 'RowanSample1'
		category: 'deleteMe'.
	self
		saveMethod: 'sendsFnoodle  ^self fnoodle'
		in: 'RowanSample1'
		category: 'deleteMe'.
	self selectServiceNamed: 'RowanSample1' in: self projectListPresenter.
	changesBrowser := self projectListPresenter selection changesUsing: session.
	self assert: changesBrowser operationListPresenter list first isKindOf: MCAddition.
	self assert: changesBrowser operationListPresenter list last isKindOf: MCAddition.
	changesBrowser operationListPresenter selectionByIndex: 2.
	self assert: changesBrowser operationListPresenter selection className equals: 'RowanSample1'.
	self assert: changesBrowser operationListPresenter selection selector equals: 'sendsFnoodle'.
	changesBrowser operationListPresenter selectionByIndex: 1.
	self assert: changesBrowser operationListPresenter selection className equals: 'RowanSample1'.
	self assert: changesBrowser operationListPresenter selection selector equals: 'fnoodle'.
	methodListBrowser := changesBrowser browseSenders.
	
	[self assert: methodListBrowser primaryPresenter methodListPresenter selection selector
		equals: #sendsFnoodle]
			ensure: [self destroy: methodListBrowser]!

test_browseSendersOfRevertedChange
	| methodListBrowser |
	self testsIssue: #issue686
		withTitle: 'Changes Browser Browse senders/implementors doesn''t work after reverting changes (3.0.92)'.
	self selectRowanSample1Test.
	self
		saveMethod: 'test2  ^123'
		in: 'RowanSample1Test'
		category: 'deleteMe'.
	self
		saveMethod: 'zzzSendTest2  ^self test2'
		in: 'RowanSample1Test'
		category: 'deleteMe'.
	self selectServiceNamed: 'RowanSample1' in: self projectListPresenter.
	changesBrowser := self projectListPresenter selection changesUsing: session.
	self assert: changesBrowser operationListPresenter list first isKindOf: MCModification.
	changesBrowser operationListPresenter selection: changesBrowser operationListPresenter list first.
	self assert: changesBrowser operationListPresenter selection className equals: 'RowanSample1Test'.
	self assert: changesBrowser operationListPresenter selection selector equals: 'test2'.
	changesBrowser revert.
	self assert: changesBrowser operationListPresenter selection selector equals: 'test2 (reverted)'.
	methodListBrowser := changesBrowser browseSenders.
	
	[self assert: methodListBrowser primaryPresenter methodListPresenter selection selector
		equals: #zzzSendTest2]
			ensure: 
				[self destroy: methodListBrowser.
				self destroy: projectsBrowser]!

test_changesAlphabetized
	"alphabetize by class then method"

	self selectRowanSample1Test.
	self makeLotsOfChanges.
	
	[changesBrowser := self projectListPresenter selection changesUsing: session.
	self assert: (changesBrowser operationListPresenter list collect: [:patch | patch selector]) asArray
		equals: #('notAnotherMethod' 'yesIndeed' 'aaa' 'mmm' 'test1' 'test2' 'testFailure' 'zzz')	"first two are in RowanSample1"	"last few are in RowanSample1Test"]
			ensure: [self destroy: projectsBrowser]!

test_noExtraLF
	| change |
	self testsIssue: #issue742 withTitle: '(3.0.93) Incomple revert in changes browser'.
	self selectRowanSample1Test.
	self
		saveMethod: 'test1  ^123'
		in: 'RowanSample1Test'
		category: 'deleteMe'.
	self selectServiceNamed: 'RowanSample1' in: self projectListPresenter.
	changesBrowser := self projectListPresenter selection changesUsing: session.
	change := changesBrowser operationListPresenter list first.
	changesBrowser operationListPresenter selectionByIndex: 1.
	self assert: change isMethodModification.
	self assert: change modification source equals: 'test1  ^123'.
	self deny: change modification source last equals: Character lf.
	self deny: change obsoletion source last equals: Character lf.
	self assert: change obsoletion source replaceLfWithCrLf
		equals: 'test1

	self assert: RowanSample1 new foo = ''foo'''.
	changesBrowser operationListPresenter selection: change.
	self assert: changesBrowser operationListPresenter selection modification selector equals: 'test1'.
	changesBrowser revert.
	self assert: change modification source replaceLfWithCrLf
		equals: 'test1

	self assert: RowanSample1 new foo = ''foo'''.
	self assert: changesBrowser operationListPresenter selection modification selector
		equals: 'test1 (reverted)'.
	self assert: changesBrowser diffsPresenter afterTitlePresenter value equals: 'Image (no change)'!

test_revertMethodAddition
	| change |
	self testsIssue: #issue624
		withTitle: '(3.0.85) A revert menu item in the changes browser would be useful'.
	self selectRowanSample1Test.
	self
		saveMethod: 'ooble  ^123'
		in: 'RowanSample1Test'
		category: 'deleteMe'.
	self selectServiceNamed: 'RowanSample1' in: self projectListPresenter.
	changesBrowser := self projectListPresenter selection changesUsing: session.
	change := changesBrowser operationListPresenter list first.
	self assert: change isMethodAddition.
	self assert: change definition source trimBlanks equals: 'ooble  ^123'.
	changesBrowser operationListPresenter selection: change.
	changesBrowser revert.
	self assert: change definition selector equals: 'ooble (removed)'!

test_revertMethodModification
	| change |
	self testsIssue: #issue624
		withTitle: '(3.0.85) A revert menu item in the changes browser would be useful'.
	self selectRowanSample1Test.
	self
		saveMethod: 'test1  ^123'
		in: 'RowanSample1Test'
		category: 'deleteMe'.
	self selectServiceNamed: 'RowanSample1' in: self projectListPresenter.
	changesBrowser := self projectListPresenter selection changesUsing: session.
	change := changesBrowser operationListPresenter list first.
	self assert: change isMethodModification.
	self assert: change modification source trimBlanks equals: 'test1  ^123'.
	self assert: change obsoletion source trimBlanks replaceLfWithCrLf
		equals: 'test1

	self assert: RowanSample1 new foo = ''foo'''.
	changesBrowser operationListPresenter selection: change.
	self assert: changesBrowser operationListPresenter selection modification selector equals: 'test1'.
	changesBrowser revert.
	self assert: change modification source trimBlanks replaceLfWithCrLf
		equals: 'test1

	self assert: RowanSample1 new foo = ''foo'''.
	self assert: changesBrowser operationListPresenter selection modification selector equals: 'test1 (reverted)'.
	self assert: changesBrowser diffsPresenter afterTitlePresenter value equals: 'Image (no change)'!

test_revertMethodRemoval
	| change |
	self testsIssue: #issue624
		withTitle: '(3.0.85) A revert menu item in the changes browser would be useful'.
	self selectRowanSample1Test.
	self selectMethodNamed: #test1.
	self projectsPresenter removeMethods: self classListPresenter selections.
	self assertIsNil: (self methodListPresenter list
				detect: [:methodService | methodService selector = #test1]
				ifNone: []).
	self selectServiceNamed: 'RowanSample1' in: self projectListPresenter.
	changesBrowser := self projectListPresenter selection changesUsing: session.
	change := changesBrowser operationListPresenter list first.
	self assert: change isMethodRemoval.
	changesBrowser operationListPresenter selection: change.
	self assert: change definition source trimBlanks replaceLfWithCrLf
		equals: 'test1

	self assert: RowanSample1 new foo = ''foo'''.
	changesBrowser revert.
	self selectRowanSample1Test.
	self
		denyIsNil: (self methodListPresenter list detect: [:methodService | methodService selector = #test1]
				ifNone: []).
	self assert: change definition selector equals: 'test1 (restored)'! !
!JadeiteChangesBrowserTestCase categoriesFor: #addNewClass!private! !
!JadeiteChangesBrowserTestCase categoriesFor: #addNewMethod!private! !
!JadeiteChangesBrowserTestCase categoriesFor: #makeLotsOfChanges!public!support!tests! !
!JadeiteChangesBrowserTestCase categoriesFor: #setUp!private!setup teardown! !
!JadeiteChangesBrowserTestCase categoriesFor: #tearDown!private!setup teardown! !
!JadeiteChangesBrowserTestCase categoriesFor: #test_additionalAccelerators!public!tests! !
!JadeiteChangesBrowserTestCase categoriesFor: #test_browseImplementors!public!tests! !
!JadeiteChangesBrowserTestCase categoriesFor: #test_browseImplementorsOfRevertedChange!public!tests! !
!JadeiteChangesBrowserTestCase categoriesFor: #test_browseImplementorsSelectsChangedMethod!public!tests! !
!JadeiteChangesBrowserTestCase categoriesFor: #test_browseMethodSelectsAddedClass!public!tests! !
!JadeiteChangesBrowserTestCase categoriesFor: #test_browseMethodSelectsAddedMethod!public!tests! !
!JadeiteChangesBrowserTestCase categoriesFor: #test_browseOfRevertedChange!public!tests! !
!JadeiteChangesBrowserTestCase categoriesFor: #test_browseSenders!public!tests! !
!JadeiteChangesBrowserTestCase categoriesFor: #test_browseSendersOfRevertedChange!public!tests! !
!JadeiteChangesBrowserTestCase categoriesFor: #test_changesAlphabetized!public!tests! !
!JadeiteChangesBrowserTestCase categoriesFor: #test_noExtraLF!public!tests! !
!JadeiteChangesBrowserTestCase categoriesFor: #test_revertMethodAddition!public!tests! !
!JadeiteChangesBrowserTestCase categoriesFor: #test_revertMethodModification!public!tests! !
!JadeiteChangesBrowserTestCase categoriesFor: #test_revertMethodRemoval!public!tests! !

