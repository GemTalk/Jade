| package |
package := Package name: 'Rowan UI Tests'.
package paxVersion: 1;
	basicComment: ''.


package classNames
	add: #JadeiteAbstractTestCase;
	add: #JadeiteBreakpointBrowserTestCase;
	add: #JadeiteChangesBrowserTestCase;
	add: #JadeiteDataCuratorTestCase;
	add: #JadeiteDebuggerDataCuratorTestCase;
	add: #JadeiteDebuggerTestCase;
	add: #JadeiteDevelopmentSUnitBrowser;
	add: #JadeiteDevelopmentSUnitBrowserModel;
	add: #JadeiteDictionaryBrowserTestCase;
	add: #JadeiteInspectorDataCuratorTestCase;
	add: #JadeiteInspectorTestCase;
	add: #JadeiteLoggerTestCase;
	add: #JadeiteLoginTestCase;
	add: #JadeiteMessageBoxTestCase;
	add: #JadeiteMethodHistoryTestCase;
	add: #JadeiteMethodListBrowserTestCase;
	add: #JadeiteMiscellaneousTestCase;
	add: #JadeitePreferencesTestCase;
	add: #JadeiteProjectBrowserAbstractTestCase;
	add: #JadeiteProjectBrowserClassesTestCase;
	add: #JadeiteProjectBrowserDictionaryDataCuratorTestCase;
	add: #JadeiteProjectBrowserDictionaryTestCase;
	add: #JadeiteProjectBrowserLowerTabsTestCase;
	add: #JadeiteProjectBrowserSystemTestCase;
	add: #JadeiteProjectBrowserTestCase;
	add: #JadeiteSUnitSupportTestCase;
	add: #JadeiteTestResource;
	add: #JadeiteTranscriptTestCase;
	add: #TestLoggingService;
	add: #TestMessageBox;
	add: #TestPrompter;
	yourself.

package methodNames
	add: #DifferencesPresenter -> #afterPresenter;
	add: #DifferencesPresenter -> #afterTitlePresenter;
	add: #DifferencesPresenter -> #beforePresenter;
	add: #DifferencesPresenter -> #beforeTitlePresenter;
	add: #EventMessageSequence -> #messages;
	add: #JadeInspector -> #documentPresenter;
	add: #JadeiteChangesBrowser -> #diffsPresenter;
	add: #JadeiteChangesBrowser -> #operationListPresenter;
	add: #JadeiteMethodHistoryBrowser -> #selection;
	add: #JadeiteMethodListBrowser -> #listPresenter;
	add: #JadeiteMethodListPresenter -> #listPresenter;
	add: #JadeiteProjectsBrowserPresenter -> #definedClassPackageText;
	add: #JadeiteProjectsBrowserPresenter -> #definedMethodPackageText;
	add: #JadeiteTranscript -> #autoCompleteEnabled:;
	add: #JadeLoginShell -> #loginButtonPresenter;
	add: #JadeLoginShell -> #loginWithoutErrorHandling;
	add: #JadeLoginShell -> #userIDPresenter:;
	add: #JadePresenter -> #browseClassReferences;
	add: #MCAddition -> #definition;
	add: #MCModification -> #modification;
	add: #MCModification -> #obsoletion;
	add: #MCRemoval -> #definition;
	add: #MethodHistoryBrowser -> #history;
	add: #MethodHistoryBrowser -> #history:;
	add: #MethodHistoryBrowser -> #slider;
	add: #MethodHistoryBrowser -> #slider:;
	add: #SUnitBrowserModel -> #debugIndividualTestsWithResources:;
	add: 'ChoicePrompter class' -> #create:;
	add: 'JadeiteSearch class' -> #allClassNames:;
	add: 'JadeiteSearch class' -> #allSelectorSymbols:;
	add: 'MessageBox class' -> #new;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: #(
	'..\Core\Object Arts\Dolphin\IDE\Base\Development System'
	'..\Core\Object Arts\Dolphin\Base\Dolphin'
	'..\Core\Object Arts\Dolphin\MVP\Base\Dolphin Basic Geometry'
	'..\Core\Object Arts\Dolphin\MVP\Views\Cards\Dolphin Card Containers'
	'..\Core\Object Arts\Dolphin\MVP\Presenters\Prompters\Dolphin Choice Prompter'
	'..\Core\Object Arts\Dolphin\MVP\Views\Common Controls\Dolphin Common Controls'
	'..\Core\Object Arts\Dolphin\MVP\Views\Control Bars\Dolphin Control Bars'
	'..\Core\Object Arts\Dolphin\MVP\Presenters\Difference\Dolphin Differences Presenter'
	'..\Core\Object Arts\Dolphin\Base\Dolphin Legacy Date & Time'
	'..\Core\Object Arts\Dolphin\MVP\Models\List\Dolphin List Models'
	'..\Core\Object Arts\Dolphin\MVP\Presenters\List\Dolphin List Presenter'
	'..\Core\Object Arts\Dolphin\Base\Dolphin Message Box'
	'..\Core\Object Arts\Dolphin\MVP\Base\Dolphin MVP Base'
	'..\Core\Object Arts\Dolphin\MVP\Presenters\Prompters\Dolphin Prompter'
	'..\Core\Object Arts\Dolphin\System\Random\Dolphin Random Stream'
	'..\Core\Object Arts\Dolphin\MVP\Models\Tree\Dolphin Tree Models'
	'..\Core\Object Arts\Dolphin\MVP\Presenters\Tree\Dolphin Tree Presenter'
	'..\Core\Object Arts\Dolphin\MVP\Type Converters\Dolphin Type Converters'
	'GemStone C Interface'
	'GemStone Session'
	'..\Core\Contributions\IDB\IDB Method History'
	'Jade Deployment'
	'Jade Inspector'
	'Jade Login'
	'Jade Test Browser'
	'Jade UI'
	'Jade UI Base'
	'Rowan Client Services'
	'Rowan UI Base'
	'..\Core\Contributions\Solutions Software\SSW EditableListView'
	'..\Core\Contributions\svenc\STON\STON-Core'
	'..\Core\Contributions\Camp Smalltalk\SUnit\SUnit'
	'..\Core\Contributions\Odellsoft\SUnitBrowser\SUnitBrowser'
	'..\Core\Contributions\Odellsoft\SUnitBrowser\SUnitBrowserModelApp'
	'..\Core\Object Arts\Dolphin\ActiveX\Shell\Windows Shell').

package!

"Class Definitions"!

MessageBox subclass: #TestMessageBox
	instanceVariableNames: ''
	classVariableNames: 'LastMessageBox PlannedResult'
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Prompter subclass: #TestPrompter
	instanceVariableNames: ''
	classVariableNames: 'LastPrompt PlannedResult'
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SUnitBrowser subclass: #JadeiteDevelopmentSUnitBrowser
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
RowanLoggingService subclass: #TestLoggingService
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SUnitBrowserModel subclass: #JadeiteDevelopmentSUnitBrowserModel
	instanceVariableNames: 'testProcess'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
TestCase subclass: #JadeiteAbstractTestCase
	instanceVariableNames: 'session transcript projectsBrowser jadeiteShell user'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
TestCase subclass: #JadeiteLoginTestCase
	instanceVariableNames: 'session jadeiteLogin parmFileName jadeiteShell'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteAbstractTestCase subclass: #JadeiteBreakpointBrowserTestCase
	instanceVariableNames: 'breakpointBrowser'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteAbstractTestCase subclass: #JadeiteChangesBrowserTestCase
	instanceVariableNames: 'changesBrowser'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteAbstractTestCase subclass: #JadeiteDataCuratorTestCase
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteAbstractTestCase subclass: #JadeiteDebuggerDataCuratorTestCase
	instanceVariableNames: 'debugger gsProcess process secondDebugger'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteAbstractTestCase subclass: #JadeiteInspectorDataCuratorTestCase
	instanceVariableNames: 'inspector'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteAbstractTestCase subclass: #JadeiteLoggerTestCase
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteAbstractTestCase subclass: #JadeiteMessageBoxTestCase
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteAbstractTestCase subclass: #JadeiteMethodHistoryTestCase
	instanceVariableNames: 'methodHistoryBrowser'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteAbstractTestCase subclass: #JadeiteMethodListBrowserTestCase
	instanceVariableNames: 'methodListBrowser cachedSymbols'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteAbstractTestCase subclass: #JadeiteMiscellaneousTestCase
	instanceVariableNames: 'workspace'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteAbstractTestCase subclass: #JadeitePreferencesTestCase
	instanceVariableNames: 'workspace'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteAbstractTestCase subclass: #JadeiteProjectBrowserAbstractTestCase
	instanceVariableNames: 'secondBrowser methodListBrowser secondPresenter transcriptWritesWereEnabled'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteAbstractTestCase subclass: #JadeiteSUnitSupportTestCase
	instanceVariableNames: 'sunitBrowser'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteAbstractTestCase subclass: #JadeiteTranscriptTestCase
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteDebuggerDataCuratorTestCase subclass: #JadeiteDebuggerTestCase
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteInspectorDataCuratorTestCase subclass: #JadeiteInspectorTestCase
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteProjectBrowserAbstractTestCase subclass: #JadeiteProjectBrowserClassesTestCase
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteProjectBrowserAbstractTestCase subclass: #JadeiteProjectBrowserDictionaryDataCuratorTestCase
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteProjectBrowserAbstractTestCase subclass: #JadeiteProjectBrowserLowerTabsTestCase
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteProjectBrowserAbstractTestCase subclass: #JadeiteProjectBrowserSystemTestCase
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteProjectBrowserAbstractTestCase subclass: #JadeiteProjectBrowserTestCase
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeiteProjectBrowserDictionaryDataCuratorTestCase subclass: #JadeiteProjectBrowserDictionaryTestCase
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
TestCase2 subclass: #JadeiteDictionaryBrowserTestCase
	instanceVariableNames: 'dictionaryBrowser'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
TestResource subclass: #JadeiteTestResource
	instanceVariableNames: 'projectsBrowser jadeiteShell'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

!ChoicePrompter class methodsFor!

create: viewName
	| testsActive |
	testsActive := Smalltalk at: #JadeiteTestsActive ifAbsent: [^super create: viewName].
	^testsActive
		ifTrue: [(Smalltalk at: #TestChoicePrompter) basicNew]
		ifFalse: [super create: viewName]! !
!ChoicePrompter class categoriesFor: #create:!instance creation!public! !

!DifferencesPresenter methodsFor!

afterPresenter
	"for testing" 
	^afterPresenter!

afterTitlePresenter
	^afterTitlePresenter!

beforePresenter
	"for testing" 
	^beforePresenter!

beforeTitlePresenter
	^beforeTitlePresenter! !
!DifferencesPresenter categoriesFor: #afterPresenter!accessing!public! !
!DifferencesPresenter categoriesFor: #afterTitlePresenter!accessing!public! !
!DifferencesPresenter categoriesFor: #beforePresenter!accessing!public! !
!DifferencesPresenter categoriesFor: #beforeTitlePresenter!accessing!public! !

!EventMessageSequence methodsFor!

messages
	"for jadeite testing"

	^messages! !
!EventMessageSequence categoriesFor: #messages!private! !

!JadeInspector methodsFor!

documentPresenter

	"for testing"

	^documentPresenter! !
!JadeInspector categoriesFor: #documentPresenter!public! !

!JadeiteChangesBrowser methodsFor!

diffsPresenter
	"for testing" 
	^diffsPresenter!

operationListPresenter
	"for tests"

	^operationListPresenter! !
!JadeiteChangesBrowser categoriesFor: #diffsPresenter!accessing!private! !
!JadeiteChangesBrowser categoriesFor: #operationListPresenter!public! !

!JadeiteMethodHistoryBrowser methodsFor!

selection 
	"for testing" 
	^selection! !
!JadeiteMethodHistoryBrowser categoriesFor: #selection!accessing!public! !

!JadeiteMethodListBrowser methodsFor!

listPresenter
	"return the basic ListPresenter"

	^self primaryPresenter listPresenter! !
!JadeiteMethodListBrowser categoriesFor: #listPresenter!public!testing support! !

!JadeiteMethodListPresenter methodsFor!

listPresenter
	"return the basic ListPresenter"
	^methodListPresenter methodListPresenter! !
!JadeiteMethodListPresenter categoriesFor: #listPresenter!public!testing support! !

!JadeiteProjectsBrowserPresenter methodsFor!

definedClassPackageText
	"for tests" 
	^definedClassPackageText!

definedMethodPackageText
	^definedMethodPackageText! !
!JadeiteProjectsBrowserPresenter categoriesFor: #definedClassPackageText!initialize/release!public! !
!JadeiteProjectsBrowserPresenter categoriesFor: #definedMethodPackageText!initialize/release!public! !

!JadeiteSearch class methodsFor!

allClassNames: anObject
	"for testing"

	^AllClassNames := anObject!

allSelectorSymbols: anObject
	"for testing"

	^AllSelectors := anObject! !
!JadeiteSearch class categoriesFor: #allClassNames:!accessing!public! !
!JadeiteSearch class categoriesFor: #allSelectorSymbols:!accessing!public! !

!JadeiteTranscript methodsFor!

autoCompleteEnabled: boolean
	"for testing"

	JadeiteSearch autoCompleteEnabled: boolean.
	autoCompleteEnabled value: boolean! !
!JadeiteTranscript categoriesFor: #autoCompleteEnabled:!accessing!private! !

!JadeLoginShell methodsFor!

loginButtonPresenter
	"for testing" 
	^loginButtonPresenter!

loginWithoutErrorHandling
	"for testing"

	| session |
	self updateModel.
	session := self model login.
	self postLogin: session!

userIDPresenter: string
	"for testing"

	userIDPresenter := string! !
!JadeLoginShell categoriesFor: #loginButtonPresenter!accessing!private! !
!JadeLoginShell categoriesFor: #loginWithoutErrorHandling!public! !
!JadeLoginShell categoriesFor: #userIDPresenter:!accessing!private! !

!JadePresenter methodsFor!

browseClassReferences
	^JadePresenter browseClassReferencesInSession: self gciSession! !
!JadePresenter categoriesFor: #browseClassReferences!menu handlers!public! !

!MCAddition methodsFor!

definition
	"for testing"

	^definition! !
!MCAddition categoriesFor: #definition!accessing!public! !

!MCModification methodsFor!

modification
	"for testing"

	^modification!

obsoletion
	"for testing"

	^obsoletion! !
!MCModification categoriesFor: #modification!accessing!public! !
!MCModification categoriesFor: #obsoletion!accessing!public! !

!MCRemoval methodsFor!

definition
	"for testing"

	^definition! !
!MCRemoval categoriesFor: #definition!accessing!public! !

!MessageBox class methodsFor!

new
	"#JadeiteTestsActive should never be present without the tests loaded"

	| testsActive |
	testsActive := Smalltalk at: #JadeiteTestsActive ifAbsent: [^self basicNew initialize].
	^testsActive
		ifTrue: [(Smalltalk at: #TestMessageBox) basicNew initialize]
		ifFalse: [self basicNew initialize] ! !
!MessageBox class categoriesFor: #new!instance creation!public! !

!MethodHistoryBrowser methodsFor!

history
	^history!

history: anObject
	history := anObject!

slider
	^slider!

slider: anObject
	slider := anObject! !
!MethodHistoryBrowser categoriesFor: #history!public! !
!MethodHistoryBrowser categoriesFor: #history:!public! !
!MethodHistoryBrowser categoriesFor: #slider!public! !
!MethodHistoryBrowser categoriesFor: #slider:!public! !

!SUnitBrowserModel methodsFor!

debugIndividualTestsWithResources: tests
	| resources |
	#GemTalkAdded.	"forgotten by oa"
	resources := self resourcesFor: tests.
	
	[self
		startResources: resources;
		debugIndividualTests: tests]
			ensure: [self stopResources: resources]! !
!SUnitBrowserModel categoriesFor: #debugIndividualTestsWithResources:!actions!private! !

"End of package definition"!

