| package |
package := Package name: 'RSR Support'.
package paxVersion: 1;
	basicComment: ''.


package methodNames
	add: #RsrService -> #rsrRemoteServiceName;
	add: 'RowanService class' -> #abstractClassName;
	add: 'RowanService class' -> #clientClassName;
	add: 'RowanService class' -> #isClientClass;
	add: 'RowanService class' -> #isServerClass;
	add: 'RowanService class' -> #serverClassName;
	add: 'RsrForwarder class' -> #newInstanceAspect:class:;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: #(
	'..\..\..\RemoteServiceReplication\src-dolphin\RemoteServiceReplication'
	'..\..\..\RemoteServiceReplication\src-dolphin\RemoteServiceReplication-Compatibility-Dolphin'
	'Rowan UI Base').

package!

"Class Definitions"!


"Global Aliases"!


"Loose Methods"!

!RowanService class methodsFor!

abstractClassName

	^self name!

clientClassName
	^self name!

isClientClass
	
	^true!

isServerClass
	
	^true!

serverClassName
	^self name! !
!RowanService class categoriesFor: #abstractClassName!public!rsr! !
!RowanService class categoriesFor: #clientClassName!public!rsr! !
!RowanService class categoriesFor: #isClientClass!public!rsr! !
!RowanService class categoriesFor: #isServerClass!public!rsr! !
!RowanService class categoriesFor: #serverClassName!public!rsr! !

!RsrForwarder class methodsFor!

newInstanceAspect: aSymbol class: aspectClass 
	"Private - Answer a new <Aspect> of the class, aspectClass, and with name, aSymbol, 
    	which is appropriate for representing aspects of the receiver's type."

	^aspectClass name: aSymbol! !
!RsrForwarder class categoriesFor: #newInstanceAspect:class:!Jadeite!private! !

!RsrService methodsFor!

rsrRemoteServiceName	^self isClient		ifTrue: [self class serverClassName]		ifFalse: [self class clientClassName]! !
!RsrService categoriesFor: #rsrRemoteServiceName!public! !

"End of package definition"!

