| package |
package := Package name: 'Jade UI Base'.
package paxVersion: 1;
	basicComment: ''.

package basicPackageVersion: '0.046'.

package basicScriptAt: #postinstall put: 'JadeiteTextStyles default resetColors.'.

package classNames
	add: #CodeSourcePresenter;
	add: #JadeBrowserPresenter;
	add: #JadeInspector;
	add: #JadeiteGitCommandPresenter;
	add: #JadeiteTextStyles;
	add: #JadeMigrateClassDialog;
	add: #JadePresenter;
	add: #JadePresenterA;
	add: #JadeShell;
	add: #JadeTextDocument;
	add: #JadeTextPresenter;
	add: #JadeToolsToolBarPresenter;
	add: #JadeValueDialog;
	add: #JadeWorkspace;
	add: #ShortcutMenuStatus;
	add: #ToolbarA;
	yourself.

package methodNames
	add: #ScintillaView -> #trackContextMenu:;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: #(
	'..\Core\Object Arts\Dolphin\Base\Dolphin'
	'..\Core\Object Arts\Dolphin\MVP\Base\Dolphin Basic Geometry'
	'..\Core\Object Arts\Dolphin\MVP\Presenters\Boolean\Dolphin Boolean Presenter'
	'..\Core\Object Arts\Dolphin\MVP\Dialogs\Common\Dolphin Common Dialogs'
	'..\Core\Object Arts\Dolphin\MVP\Views\Control Bars\Dolphin Control Bars'
	'..\Core\Object Arts\Dolphin\MVP\Presenters\List\Dolphin List Presenter'
	'..\Core\Object Arts\Dolphin\Base\Dolphin Message Box'
	'..\Core\Object Arts\Dolphin\MVP\Base\Dolphin MVP Base'
	'..\Core\Object Arts\Dolphin\MVP\Views\Scintilla\Dolphin Scintilla View'
	'..\Core\Object Arts\Dolphin\MVP\Presenters\Text\Dolphin Text Presenter'
	'..\Core\Object Arts\Dolphin\MVP\Type Converters\Dolphin Type Converters'
	'..\Core\Object Arts\Dolphin\MVP\Models\Value\Dolphin Value Models'
	'GemStone C Interface'
	'GemStone Session'
	'..\Core\Object Arts\Dolphin\ActiveX\Shell\Windows Shell').

package!

"Class Definitions"!

Object subclass: #JadeiteTextStyles
	instanceVariableNames: 'colorForCompileError colorForNoEdits colorForUnsavedEdits textStyles colorForUndisplayableSource'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: 'default'!
Notification subclass: #ShortcutMenuStatus
	instanceVariableNames: ''
	classVariableNames: 'Status'
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Presenter subclass: #JadePresenter
	instanceVariableNames: 'gciSession'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadePresenter subclass: #JadePresenterA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadePresenter subclass: #JadeToolsToolBarPresenter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadePresenterA subclass: #CodeSourcePresenter
	instanceVariableNames: 'documentPresenter menuTitle environment'
	classVariableNames: 'CodeFont'
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadePresenterA subclass: #JadeBrowserPresenter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
CodeSourcePresenter subclass: #JadeiteGitCommandPresenter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Shell subclass: #JadeShell
	instanceVariableNames: 'gciSession myPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
TextDocument subclass: #JadeTextDocument
	instanceVariableNames: 'gciSession codePane environment'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeTextDocument subclass: #JadeInspector
	instanceVariableNames: 'instVarListPresenter className'
	classVariableNames: 'DefaultInspectorClass'
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeTextDocument subclass: #JadeWorkspace
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
ValueDialog subclass: #JadeValueDialog
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JadeValueDialog subclass: #JadeMigrateClassDialog
	instanceVariableNames: 'copyMethodsPresenter recompileSubclassesPresenter migrateInstancesPresenter removeFromClassHistoryPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
TextPresenter subclass: #JadeTextPresenter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Toolbar subclass: #ToolbarA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

!ScintillaView methodsFor!

trackContextMenu: aPointEvent
	"Private - Shows and tracks a context menu for the receiver from the mouse position in
	aPointEvent. Answer nil if the receiver does not have a contextMenu to show, or a Boolean if
	it has."

	^self queryContextMenu 
		ifNotNil: 
			[:menu | 
			| pos |
			pos := aPointEvent position.
			pos = (-1 @ -1) ifTrue: [pos := self positionForKeyboardContextMenu].
			ShortcutMenuStatus start.
			menu showIn: self position: pos.
			ShortcutMenuStatus stop.
			true]! !
!ScintillaView categoriesFor: #trackContextMenu:!menus!private! !

"End of package definition"!

